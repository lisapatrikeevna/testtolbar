[{"E:\\react\\test\\test-dmin-bar\\src\\index.tsx":"1","E:\\react\\test\\test-dmin-bar\\src\\reportWebVitals.ts":"2","E:\\react\\test\\test-dmin-bar\\src\\redux\\store.ts":"3","E:\\react\\test\\test-dmin-bar\\src\\App.tsx":"4","E:\\react\\test\\test-dmin-bar\\src\\redux\\productReducer.ts":"5","E:\\react\\test\\test-dmin-bar\\src\\changeProductsPage.tsx":"6","E:\\react\\test\\test-dmin-bar\\src\\common\\productList\\productList.tsx":"7","E:\\react\\test\\test-dmin-bar\\src\\common\\productList\\itemProduct.tsx":"8","E:\\react\\test\\test-dmin-bar\\src\\common\\toolbar\\toolbar.tsx":"9","E:\\react\\test\\test-dmin-bar\\src\\common\\toolbar\\sort\\Sort.tsx":"10","E:\\react\\test\\test-dmin-bar\\src\\common\\productList\\newProduct.tsx":"11","E:\\react\\test\\test-dmin-bar\\src\\common\\toolbar\\currency\\currency.tsx":"12","E:\\react\\test\\test-dmin-bar\\src\\expansive\\validate.tsx":"13","E:\\react\\test\\test-dmin-bar\\src\\expansive\\Input.tsx":"14","E:\\react\\test\\test-dmin-bar\\src\\redux\\filtered.ts":"15"},{"size":639,"mtime":1611135392496,"results":"16","hashOfConfig":"17"},{"size":425,"mtime":1606577166090,"results":"18","hashOfConfig":"17"},{"size":422,"mtime":1611141145737,"results":"19","hashOfConfig":"17"},{"size":264,"mtime":1611154881941,"results":"20","hashOfConfig":"17"},{"size":2756,"mtime":1613909817942,"results":"21","hashOfConfig":"17"},{"size":525,"mtime":1613689419513,"results":"22","hashOfConfig":"17"},{"size":1811,"mtime":1613909817951,"results":"23","hashOfConfig":"17"},{"size":874,"mtime":1613912320067,"results":"24","hashOfConfig":"17"},{"size":1626,"mtime":1613903849813,"results":"25","hashOfConfig":"17"},{"size":2530,"mtime":1611143646073,"results":"26","hashOfConfig":"17"},{"size":4574,"mtime":1613922052175,"results":"27","hashOfConfig":"17"},{"size":847,"mtime":1613750484340,"results":"28","hashOfConfig":"17"},{"size":913,"mtime":1613912943997,"results":"29","hashOfConfig":"17"},{"size":2591,"mtime":1613919692114,"results":"30","hashOfConfig":"17"},{"size":918,"mtime":1613907591861,"results":"31","hashOfConfig":"17"},{"filePath":"32","messages":"33","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},"sycqaz",{"filePath":"35","messages":"36","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"37","messages":"38","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"39","messages":"40","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"41","messages":"42","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"43","usedDeprecatedRules":"34"},{"filePath":"44","messages":"45","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"46","messages":"47","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"48","usedDeprecatedRules":"34"},{"filePath":"49","messages":"50","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"51","messages":"52","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"53","usedDeprecatedRules":"34"},{"filePath":"54","messages":"55","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"56","usedDeprecatedRules":"34"},{"filePath":"57","messages":"58","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"59","messages":"60","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"61","messages":"62","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"63","messages":"64","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"65","messages":"66","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},"E:\\react\\test\\test-dmin-bar\\src\\index.tsx",[],["67","68"],"E:\\react\\test\\test-dmin-bar\\src\\reportWebVitals.ts",[],"E:\\react\\test\\test-dmin-bar\\src\\redux\\store.ts",[],"E:\\react\\test\\test-dmin-bar\\src\\App.tsx",[],"E:\\react\\test\\test-dmin-bar\\src\\redux\\productReducer.ts",["69"],"export type productsType = {\r\n    id: number\r\n    name: string\r\n    price: number\r\n    image: string\r\n    description: string\r\n}\r\ntype productInitialStateType = {\r\n    products: Array<productsType>\r\n    sort: string\r\n    filterMin: number\r\n    filterMax: number\r\n    currency: string\r\n}\r\nlet initialState: productInitialStateType = {\r\n    products: [],\r\n    sort: 'ABC',\r\n    filterMin: 0,\r\n    filterMax: 11000,\r\n    currency: \"UAN\"\r\n}\r\ntype setProductACACType = ReturnType<typeof setProductAC>\r\ntype setCurrencyACType = ReturnType<typeof setCurrencyAC>\r\ntype setNewProductACType = ReturnType<typeof setNewProductAC>\r\ntype sortTypeACType = ReturnType<typeof sortTypeAC>\r\ntype setMinTypeACType = ReturnType<typeof setMinTypeAC>\r\ntype setMaxTypeACType = ReturnType<typeof setMaxTypeAC>\r\ntype ActionType =\r\n    setProductACACType\r\n    | setNewProductACType\r\n    | sortTypeACType\r\n    | setMinTypeACType\r\n    | setMaxTypeACType\r\n    | setCurrencyACType\r\nexport const ProductReducer = (state = initialState, action: ActionType) => {\r\n    switch (action.type) {\r\n        case 'SET_PRODUCT':\r\n            return {\r\n                ...state, products: action.products\r\n            }\r\n        case 'SET_NEW_PRODUCT':\r\n            return {\r\n                ...state, products: [ action.newProduct,...state.products]\r\n            }\r\n        case 'SORT_TYPE_PRODUCT': {\r\n            return {\r\n                ...state, sort: action.sortType\r\n            }\r\n        }\r\n        case 'SORT_TYPE_MIN':\r\n            return {\r\n                ...state, filterMin: action.num\r\n            }\r\n        case 'SORT_TYPE_MAX':\r\n            return {\r\n                ...state, filterMax: action.num\r\n            }\r\n        case \"SET_CURRENCY\":\r\n            return {   ...state,\r\n                currency: action.payload,\r\n                products: state.products.map((pr) => {\r\n                    if (action.payload === 'UAN') {\r\n                        return {...pr, price: pr.price * 2}\r\n                    } else {\r\n                        return {...pr, price: pr.price / 2}\r\n                    }\r\n                })\r\n            }\r\n        default  :\r\n            return state;\r\n    }\r\n}\r\nexport const setProductAC = (products: Array<productsType>) => ({type: 'SET_PRODUCT', products} as const)\r\nexport const setNewProductAC = (newProduct: productsType) => ({type: 'SET_NEW_PRODUCT', newProduct} as const)\r\nexport const sortTypeAC = (sortType: string) => ({type: 'SORT_TYPE_PRODUCT', sortType} as const)\r\nexport const setMinTypeAC = (num: number) => ({type: 'SORT_TYPE_MIN', num} as const)\r\nexport const setMaxTypeAC = (num: number) => ({type: 'SORT_TYPE_MAX', num} as const)\r\nexport const setCurrencyAC = (payload: string) => ({type: 'SET_CURRENCY', payload} as const)\r\n","E:\\react\\test\\test-dmin-bar\\src\\changeProductsPage.tsx",[],"E:\\react\\test\\test-dmin-bar\\src\\common\\productList\\productList.tsx",["70"],"import React, {useEffect} from 'react'\r\nimport {useDispatch, useSelector} from \"react-redux\"\r\nimport {RootStateType} from '../../redux/store'\r\nimport {productsType, setProductAC} from \"../../redux/productReducer\"\r\nimport cl from './ProductList.module.css'\r\nimport data from '../../redux/products.json'\r\nimport ItemProduct from './itemProduct'\r\nimport {sortArrProd} from \"../../redux/filtered\";\r\n\r\n\r\nconst ProductList = () => {\r\n    // useEffect(() => {\r\n    //     const data1: any  = data\r\n    //     debugger\r\n    //\r\n    // }, [])\r\n    let filterMin =useSelector<RootStateType,number>(state => state.products.filterMin)\r\n    let filterMax =useSelector<RootStateType,number>(state => state.products.filterMax)\r\n    let currency =useSelector<RootStateType,string>(state => state.products.currency)\r\n\r\n    const dispatch = useDispatch()\r\n    let products = useSelector<RootStateType, Array<productsType>>(state => state.products.products)\r\n    let ollProducts = products\r\n    console.log(ollProducts)\r\n    const abcType = useSelector<RootStateType, string>(state => state.products.sort)\r\n\r\n    useEffect(() => {\r\n        const data1: any  = data\r\n        if(products.length <data1.products.length){\r\n            dispatch(setProductAC(data1.products))\r\n        }else {\r\n            dispatch(setProductAC(products))\r\n        }\r\n    }, [dispatch,ollProducts])\r\n\r\n    ollProducts = ollProducts.filter(p=> Number(p.price) >= Number(filterMin) && Number(p.price) <= Number(filterMax))\r\n\r\n    const product = sortArrProd(ollProducts, abcType).map(p => <ItemProduct key={p.id} id={p.id} image={p.image} name={p.name} description={p.description} price={p.price} currency={currency}/>)\r\n\r\n    return (\r\n        <div className={cl.ollWrap}>\r\n            {product}\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default ProductList;","E:\\react\\test\\test-dmin-bar\\src\\common\\productList\\itemProduct.tsx",[],"E:\\react\\test\\test-dmin-bar\\src\\common\\toolbar\\toolbar.tsx",["71"],"import React, {ChangeEvent, useState} from 'react';\r\nimport {setMaxTypeAC, setMinTypeAC} from '../../redux/productReducer';\r\nimport {Sort} from \"./sort/Sort\";\r\nimport cl from './Toolbar.module.css'\r\nimport {useDispatch, useSelector} from \"react-redux\";\r\nimport {RootStateType} from \"../../redux/store\";\r\nimport Currency from \"./currency/currency\";\r\n\r\nconst Toolbar = () => {\r\n    const dispatch = useDispatch()\r\n    let min =useSelector<RootStateType,number>(state => state.products.filterMin)\r\n    let max =useSelector<RootStateType,number>(state => state.products.filterMax)\r\n    const onChangeMin=(e:ChangeEvent<HTMLInputElement>)=>{\r\n        dispatch(setMinTypeAC(e.currentTarget.valueAsNumber))\r\n    }\r\n    let currency =useSelector<RootStateType,string>(state => state.products.currency)\r\n    const onChangeMax=(e:ChangeEvent<HTMLInputElement>)=>{\r\n        let value = e.currentTarget.valueAsNumber;\r\n        if (!isFinite(value)) return;\r\n        dispatch(setMaxTypeAC(value))\r\n    }\r\n    return (\r\n        <div className={cl.nav}>\r\n            <div className={cl.currency}>\r\n                <Currency currency={currency}/>\r\n            </div>\r\n            <div className=\"price\">\r\n                <label > min <input type={'number'} value={min} onChange={onChangeMin}/></label><br/>\r\n                <label > max <input type={'number'} value={max} min={min} onChange={onChangeMax}/></label>\r\n            </div>\r\n            <div className={cl.sort}><Sort items={[{title: \"ABC\", value: \"ABC\"}, {title: \"max\", value: \"max\"}, {title: \"min\", value: \"min\"}]}/></div>\r\n\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Toolbar;","E:\\react\\test\\test-dmin-bar\\src\\common\\toolbar\\sort\\Sort.tsx",["72"],"import React, {ChangeEvent, useState, KeyboardEvent, useEffect} from 'react'\nimport {useDispatch, useSelector} from 'react-redux';\nimport cl from './Sort.module.css';\nimport {sortTypeAC} from \"../../../redux/productReducer\";\nimport {RootStateType} from \"../../../redux/store\";\n\ntype ItemType = {\n    title: string\n    value: any\n}\ntype SelectType = {\n    items: ItemType[]\n}\nexport const Sort = (props:SelectType) => {\n    const dispatch = useDispatch()\n    let value = useSelector<RootStateType,string>(state => state.products.sort)\n    const [active, setActive] = useState(false);\n    const [hoverEL, setHoverEL] = useState(value);\n    const onChange =(value:string)=>{\n        dispatch(sortTypeAC(value))\n    }\n    const selectedItem = props.items.find(i => i.value === value)\n    const hoveredItem = props.items.find(i => i.value === hoverEL)\n\n    useEffect(() => {\n        setHoverEL(value);\n    }, [value])\n\n    const showActive = () => { setActive(!active) }\n    const itemClicked = (value: any) => {\n        onChange(value);\n        showActive();\n    }\n    const onKeyUp = (e: KeyboardEvent<HTMLDivElement>) => {\n        if (e.key === 'ArrowDown' || e.key === 'ArrowUp') {\n            for (let i = 0; i < props.items.length; i++) {\n                if (props.items[i].value === hoverEL) {\n                    const pretendentElement = e.key === 'ArrowDown' ? props.items[i + 1] : props.items[i - 1];\n                    if (pretendentElement) {\n                        onChange(pretendentElement.value)\n                        setHoverEL(props.items[i+1].value);\n                        return;\n                    }\n                }\n            }\n            if (!selectedItem) {\n                onChange(props.items[0].value);\n            }\n        }\n        if (e.key === 'Enter' || e.key === 'Escape') {\n            setActive(false);\n        }\n    }\n\n    return (\n        <div  className={cl.select} onKeyUp={onKeyUp} tabIndex={0}>\n            <h3 onClick={showActive} className={cl.mainTitle}>{selectedItem && selectedItem.title}</h3>\n            {active &&\n            <div className={cl.items}>\n                {props.items.map(i =>\n                    <div key={i.value}\n                         onMouseEnter={() => { setHoverEL(i.value) }}\n                         onClick={() => {  itemClicked(i.value) }}\n                         className={cl.item + (hoveredItem === i ? cl.selected : '')} >\n                        {i.title}\n                    </div>)}\n            </div>\n            }\n        </div>\n    )\n}","E:\\react\\test\\test-dmin-bar\\src\\common\\productList\\newProduct.tsx",["73","74","75","76","77","78","79","80"],"E:\\react\\test\\test-dmin-bar\\src\\common\\toolbar\\currency\\currency.tsx",[],"E:\\react\\test\\test-dmin-bar\\src\\expansive\\validate.tsx",[],"E:\\react\\test\\test-dmin-bar\\src\\expansive\\Input.tsx",["81"],"E:\\react\\test\\test-dmin-bar\\src\\redux\\filtered.ts",[],{"ruleId":"82","replacedBy":"83"},{"ruleId":"84","replacedBy":"85"},{"ruleId":"86","severity":1,"message":"87","line":48,"column":17,"nodeType":"88","messageId":"89","endLine":48,"endColumn":20},{"ruleId":"90","severity":1,"message":"91","line":34,"column":8,"nodeType":"92","endLine":34,"endColumn":30,"suggestions":"93"},{"ruleId":"86","severity":1,"message":"94","line":1,"column":29,"nodeType":"88","messageId":"89","endLine":1,"endColumn":37},{"ruleId":"86","severity":1,"message":"95","line":1,"column":16,"nodeType":"88","messageId":"89","endLine":1,"endColumn":27},{"ruleId":"86","severity":1,"message":"96","line":3,"column":9,"nodeType":"88","messageId":"89","endLine":3,"endColumn":14},{"ruleId":"86","severity":1,"message":"97","line":4,"column":8,"nodeType":"88","messageId":"89","endLine":4,"endColumn":17},{"ruleId":"86","severity":1,"message":"98","line":5,"column":9,"nodeType":"88","messageId":"89","endLine":5,"endColumn":13},{"ruleId":"86","severity":1,"message":"99","line":6,"column":8,"nodeType":"88","messageId":"89","endLine":6,"endColumn":22},{"ruleId":"86","severity":1,"message":"100","line":8,"column":8,"nodeType":"88","messageId":"89","endLine":8,"endColumn":18},{"ruleId":"86","severity":1,"message":"101","line":9,"column":8,"nodeType":"88","messageId":"89","endLine":9,"endColumn":17},{"ruleId":"86","severity":1,"message":"95","line":10,"column":16,"nodeType":"88","messageId":"89","endLine":10,"endColumn":27},{"ruleId":"86","severity":1,"message":"102","line":10,"column":29,"nodeType":"88","messageId":"89","endLine":10,"endColumn":38},{"ruleId":"86","severity":1,"message":"103","line":36,"column":11,"nodeType":"88","messageId":"89","endLine":36,"endColumn":18},"no-native-reassign",["104"],"no-negated-in-lhs",["105"],"@typescript-eslint/no-unused-vars","'ppp' is assigned a value but never used.","Identifier","unusedVar","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'products'. Either include it or remove the dependency array.","ArrayExpression",["106"],"'useState' is defined but never used.","'ChangeEvent' is defined but never used.","'green' is defined but never used.","'InputBase' is defined but never used.","'fade' is defined but never used.","'createMuiTheme' is defined but never used.","'withStyles' is defined but never used.","'TextField' is defined but never used.","'useEffect' is defined but never used.","'classes' is assigned a value but never used.","no-global-assign","no-unsafe-negation",{"desc":"107","fix":"108"},"Update the dependencies array to be: [dispatch, ollProducts, products]",{"range":"109","text":"110"},[1333,1355],"[dispatch, ollProducts, products]"]