[{"E:\\react\\test-dmin-bar\\src\\index.tsx":"1","E:\\react\\test-dmin-bar\\src\\reportWebVitals.ts":"2","E:\\react\\test-dmin-bar\\src\\redux\\store.ts":"3","E:\\react\\test-dmin-bar\\src\\App.tsx":"4","E:\\react\\test-dmin-bar\\src\\redux\\productReducer.ts":"5","E:\\react\\test-dmin-bar\\src\\changeProductsPage.tsx":"6","E:\\react\\test-dmin-bar\\src\\common\\productList\\productList.tsx":"7","E:\\react\\test-dmin-bar\\src\\common\\toolbar\\toolbar.tsx":"8","E:\\react\\test-dmin-bar\\src\\common\\toolbar\\sort\\Sort.tsx":"9","E:\\react\\test-dmin-bar\\src\\common\\productList\\itemProduct.tsx":"10"},{"size":639,"mtime":1611135392496,"results":"11","hashOfConfig":"12"},{"size":425,"mtime":1606577166090,"results":"13","hashOfConfig":"12"},{"size":422,"mtime":1611141145737,"results":"14","hashOfConfig":"12"},{"size":264,"mtime":1611154881941,"results":"15","hashOfConfig":"12"},{"size":1966,"mtime":1611164464342,"results":"16","hashOfConfig":"12"},{"size":525,"mtime":1611160735691,"results":"17","hashOfConfig":"12"},{"size":2666,"mtime":1611164879869,"results":"18","hashOfConfig":"12"},{"size":1382,"mtime":1611165816998,"results":"19","hashOfConfig":"12"},{"size":2530,"mtime":1611143646073,"results":"20","hashOfConfig":"12"},{"size":1944,"mtime":1611165777692,"results":"21","hashOfConfig":"12"},{"filePath":"22","messages":"23","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},"1uvsnvd",{"filePath":"25","messages":"26","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},{"filePath":"27","messages":"28","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},{"filePath":"29","messages":"30","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},{"filePath":"31","messages":"32","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},{"filePath":"33","messages":"34","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},{"filePath":"35","messages":"36","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"37","usedDeprecatedRules":"24"},{"filePath":"38","messages":"39","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"40","usedDeprecatedRules":"24"},{"filePath":"41","messages":"42","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"43","usedDeprecatedRules":"44"},{"filePath":"45","messages":"46","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},"E:\\react\\test-dmin-bar\\src\\index.tsx",[],["47","48"],"E:\\react\\test-dmin-bar\\src\\reportWebVitals.ts",[],"E:\\react\\test-dmin-bar\\src\\redux\\store.ts",[],"E:\\react\\test-dmin-bar\\src\\App.tsx",[],"E:\\react\\test-dmin-bar\\src\\redux\\productReducer.ts",[],"E:\\react\\test-dmin-bar\\src\\changeProductsPage.tsx",[],"E:\\react\\test-dmin-bar\\src\\common\\productList\\productList.tsx",["49","50"],"import React, {useEffect} from 'react';\r\nimport {useDispatch, useSelector} from \"react-redux\";\r\nimport {RootStateType} from '../../redux/store';\r\nimport {productsType, setProductAC} from \"../../redux/productReducer\";\r\nimport cl from './ProductList.module.css'\r\nimport data from '../../redux/products.json'\r\nimport img1 from '../../products/1.jpg'\r\n\r\n\r\n\r\nconst ProductList = () => {\r\n    useEffect(() => {\r\n        const data1: any  = data\r\n        dispatch(setProductAC(data1.products))\r\n    }, [])\r\n    let filterMin =useSelector<RootStateType,number>(state => state.products.filterMin)\r\n    let filterMax =useSelector<RootStateType,number>(state => state.products.filterMax)\r\n    const dispatch = useDispatch()\r\n    let products = useSelector<RootStateType, Array<productsType>>(state => state.products.products)\r\n    let ollProducts = products\r\n    const abcType = useSelector<RootStateType, string>(state => state.products.sort)\r\n    if (abcType === 'ABC') {\r\n        ollProducts = [...ollProducts].sort((a, b) => {\r\n            if (a.name > b.name) {\r\n                return 1\r\n            }\r\n            if (a.name < b.name) {\r\n                return -1\r\n            }\r\n            return 0\r\n        })\r\n        console.log(ollProducts)\r\n    }\r\n    if (abcType === 'max') {\r\n        ollProducts = [...ollProducts].sort((a, b) => {\r\n            if (a.price < b.price) {\r\n                return 1\r\n            }\r\n            if (a.price > b.price) {\r\n                return -1\r\n            }\r\n            return 0\r\n        })\r\n        console.log(ollProducts)\r\n    }\r\n    if (abcType === 'min') {\r\n        ollProducts = ollProducts.sort((a, b) => {\r\n            if (a.price > b.price) {\r\n                return 1\r\n            }\r\n            if (a.price < b.price) {\r\n                return -1\r\n            }\r\n            return 0\r\n        })\r\n    }\r\n    if(filterMin){\r\n        ollProducts = ollProducts.filter(p=> Number(p.price) >= Number(filterMin))\r\n    }\r\n    if(filterMax){\r\n        ollProducts = ollProducts.filter(p=> Number(p.price) >= Number(filterMax))\r\n    }\r\n    const ItemProduct = ollProducts.map(p => {\r\n        return  (<div className={cl.itemWrap} key={p.id}>\r\n                <img src={p.image} alt={p.name}/>\r\n                <div className={cl.content}>\r\n                    <h3>{p.name}</h3>\r\n                    <div className={cl.prise}>{p.price}<span> UAN</span></div>\r\n                    <div className={cl.desc}>{p.description}</div>\r\n                </div>\r\n            </div>)\r\n        }\r\n    )\r\n    return (\r\n        <div className={cl.ollWrap}>\r\n            {ItemProduct}\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default ProductList;","E:\\react\\test-dmin-bar\\src\\common\\toolbar\\toolbar.tsx",["51"],"import React, {ChangeEvent, useState} from 'react';\r\nimport {setMaxTypeAC, setMinTypeAC} from '../../redux/productReducer';\r\nimport {Sort} from \"./sort/Sort\";\r\nimport cl from './Toolbar.module.css'\r\nimport {useDispatch, useSelector} from \"react-redux\";\r\nimport {RootStateType} from \"../../redux/store\";\r\n\r\nconst Toolbar = () => {\r\n    const dispatch = useDispatch()\r\n    let min =useSelector<RootStateType,number>(state => state.products.filterMin)\r\n    let max =useSelector<RootStateType,number>(state => state.products.filterMax)\r\n    const onChangeMin=(e:ChangeEvent<HTMLInputElement>)=>{\r\n        dispatch(setMinTypeAC(e.currentTarget.valueAsNumber))\r\n    }\r\n\r\n    const onChangeMax=(e:ChangeEvent<HTMLInputElement>)=>{\r\n        let value = e.currentTarget.valueAsNumber;\r\n        if (!isFinite(value)) return;\r\n        dispatch(setMaxTypeAC(value))\r\n    }\r\n    return (\r\n        <div className={cl.nav}>\r\n            <div className=\"price\">\r\n                <label > min <input type={'number'} value={min} onChange={onChangeMin}/></label><br/>\r\n                <label > max <input type={'number'} value={max} min={min} onChange={onChangeMax}/></label>\r\n            </div>\r\n            <div className={cl.sort}><Sort items={[{title: \"ABC\", value: \"ABC\"}, {title: \"max\", value: \"max\"}, {title: \"min\", value: \"min\"}]}/></div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Toolbar;","E:\\react\\test-dmin-bar\\src\\common\\toolbar\\sort\\Sort.tsx",["52"],"import React, {ChangeEvent, useState, KeyboardEvent, useEffect} from 'react'\nimport {useDispatch, useSelector} from 'react-redux';\nimport cl from './Sort.module.css';\nimport {sortTypeAC} from \"../../../redux/productReducer\";\nimport {RootStateType} from \"../../../redux/store\";\n\ntype ItemType = {\n    title: string\n    value: any\n}\ntype SelectType = {\n    items: ItemType[]\n}\nexport const Sort = (props:SelectType) => {\n    const dispatch = useDispatch()\n    let value = useSelector<RootStateType,string>(state => state.products.sort)\n    const [active, setActive] = useState(false);\n    const [hoverEL, setHoverEL] = useState(value);\n    const onChange =(value:string)=>{\n        dispatch(sortTypeAC(value))\n    }\n    const selectedItem = props.items.find(i => i.value === value)\n    const hoveredItem = props.items.find(i => i.value === hoverEL)\n\n    useEffect(() => {\n        setHoverEL(value);\n    }, [value])\n\n    const showActive = () => { setActive(!active) }\n    const itemClicked = (value: any) => {\n        onChange(value);\n        showActive();\n    }\n    const onKeyUp = (e: KeyboardEvent<HTMLDivElement>) => {\n        if (e.key === 'ArrowDown' || e.key === 'ArrowUp') {\n            for (let i = 0; i < props.items.length; i++) {\n                if (props.items[i].value === hoverEL) {\n                    const pretendentElement = e.key === 'ArrowDown' ? props.items[i + 1] : props.items[i - 1];\n                    if (pretendentElement) {\n                        onChange(pretendentElement.value)\n                        setHoverEL(props.items[i+1].value);\n                        return;\n                    }\n                }\n            }\n            if (!selectedItem) {\n                onChange(props.items[0].value);\n            }\n        }\n        if (e.key === 'Enter' || e.key === 'Escape') {\n            setActive(false);\n        }\n    }\n\n    return (\n        <div  className={cl.select} onKeyUp={onKeyUp} tabIndex={0}>\n            <h3 onClick={showActive} className={cl.mainTitle}>{selectedItem && selectedItem.title}</h3>\n            {active &&\n            <div className={cl.items}>\n                {props.items.map(i =>\n                    <div key={i.value}\n                         onMouseEnter={() => { setHoverEL(i.value) }}\n                         onClick={() => {  itemClicked(i.value) }}\n                         className={cl.item + (hoveredItem === i ? cl.selected : '')} >\n                        {i.title}\n                    </div>)}\n            </div>\n            }\n        </div>\n    )\n}",["53","54"],"E:\\react\\test-dmin-bar\\src\\common\\productList\\itemProduct.tsx",[],{"ruleId":"55","replacedBy":"56"},{"ruleId":"57","replacedBy":"58"},{"ruleId":"59","severity":1,"message":"60","line":7,"column":8,"nodeType":"61","messageId":"62","endLine":7,"endColumn":12},{"ruleId":"63","severity":1,"message":"64","line":15,"column":8,"nodeType":"65","endLine":15,"endColumn":10,"suggestions":"66"},{"ruleId":"59","severity":1,"message":"67","line":1,"column":29,"nodeType":"61","messageId":"62","endLine":1,"endColumn":37},{"ruleId":"59","severity":1,"message":"68","line":1,"column":16,"nodeType":"61","messageId":"62","endLine":1,"endColumn":27},{"ruleId":"55","replacedBy":"69"},{"ruleId":"57","replacedBy":"70"},"no-native-reassign",["71"],"no-negated-in-lhs",["72"],"@typescript-eslint/no-unused-vars","'img1' is defined but never used.","Identifier","unusedVar","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'dispatch'. Either include it or remove the dependency array.","ArrayExpression",["73"],"'useState' is defined but never used.","'ChangeEvent' is defined but never used.",["71"],["72"],"no-global-assign","no-unsafe-negation",{"desc":"74","fix":"75"},"Update the dependencies array to be: [dispatch]",{"range":"76","text":"77"},[495,497],"[dispatch]"]