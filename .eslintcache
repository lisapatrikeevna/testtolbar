[{"E:\\react\\test\\test-dmin-bar\\src\\index.tsx":"1","E:\\react\\test\\test-dmin-bar\\src\\reportWebVitals.ts":"2","E:\\react\\test\\test-dmin-bar\\src\\redux\\store.ts":"3","E:\\react\\test\\test-dmin-bar\\src\\App.tsx":"4","E:\\react\\test\\test-dmin-bar\\src\\redux\\productReducer.ts":"5","E:\\react\\test\\test-dmin-bar\\src\\changeProductsPage.tsx":"6","E:\\react\\test\\test-dmin-bar\\src\\common\\productList\\productList.tsx":"7","E:\\react\\test\\test-dmin-bar\\src\\common\\productList\\itemProduct.tsx":"8","E:\\react\\test\\test-dmin-bar\\src\\common\\toolbar\\toolbar.tsx":"9","E:\\react\\test\\test-dmin-bar\\src\\common\\toolbar\\sort\\Sort.tsx":"10","E:\\react\\test\\test-dmin-bar\\src\\common\\productList\\newProduct.tsx":"11","E:\\react\\test\\test-dmin-bar\\src\\common\\toolbar\\currency\\currency.tsx":"12","E:\\react\\test\\test-dmin-bar\\src\\expansive\\validate.tsx":"13","E:\\react\\test\\test-dmin-bar\\src\\expansive\\Input.tsx":"14","E:\\react\\test\\test-dmin-bar\\src\\expansive\\filtered.ts":"15","E:\\react\\test\\test-dmin-bar\\src\\common\\toolbar\\range.tsx":"16","E:\\react\\test\\test-dmin-bar\\src\\common\\toolbar\\wrange\\Wrange.tsx":"17","E:\\react\\test\\test-dmin-bar\\src\\expansive\\modalForm\\exampleModal.tsx":"18","E:\\react\\test\\test-dmin-bar\\src\\expansive\\Portal.tsx":"19"},{"size":639,"mtime":1611135392496,"results":"20","hashOfConfig":"21"},{"size":425,"mtime":1606577166090,"results":"22","hashOfConfig":"21"},{"size":422,"mtime":1611141145737,"results":"23","hashOfConfig":"21"},{"size":264,"mtime":1613927421634,"results":"24","hashOfConfig":"21"},{"size":2758,"mtime":1613951968717,"results":"25","hashOfConfig":"21"},{"size":531,"mtime":1613958127192,"results":"26","hashOfConfig":"21"},{"size":1710,"mtime":1613924078568,"results":"27","hashOfConfig":"21"},{"size":674,"mtime":1613927755132,"results":"28","hashOfConfig":"21"},{"size":3356,"mtime":1613959335591,"results":"29","hashOfConfig":"21"},{"size":2530,"mtime":1611143646073,"results":"30","hashOfConfig":"21"},{"size":3900,"mtime":1613958564363,"results":"31","hashOfConfig":"21"},{"size":847,"mtime":1613750484340,"results":"32","hashOfConfig":"21"},{"size":913,"mtime":1613912943997,"results":"33","hashOfConfig":"21"},{"size":2757,"mtime":1613955924678,"results":"34","hashOfConfig":"21"},{"size":925,"mtime":1613924078559,"results":"35","hashOfConfig":"21"},{"size":1056,"mtime":1613959335594,"results":"36","hashOfConfig":"21"},{"size":7666,"mtime":1613950826657,"results":"37","hashOfConfig":"21"},{"size":1476,"mtime":1613959179328,"results":"38","hashOfConfig":"21"},{"size":454,"mtime":1607304633865,"results":"39","hashOfConfig":"21"},{"filePath":"40","messages":"41","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},"sycqaz",{"filePath":"43","messages":"44","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"45","messages":"46","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"47","messages":"48","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"49","messages":"50","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"51","messages":"52","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"53","messages":"54","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"55","usedDeprecatedRules":"42"},{"filePath":"56","messages":"57","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"58","messages":"59","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"60","messages":"61","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"62","usedDeprecatedRules":"42"},{"filePath":"63","messages":"64","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"65","messages":"66","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"67","messages":"68","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"69","messages":"70","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"71","usedDeprecatedRules":"42"},{"filePath":"72","messages":"73","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"74","messages":"75","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"76","usedDeprecatedRules":"42"},{"filePath":"77","messages":"78","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"79","messages":"80","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"81","messages":"82","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},"E:\\react\\test\\test-dmin-bar\\src\\index.tsx",[],["83","84"],"E:\\react\\test\\test-dmin-bar\\src\\reportWebVitals.ts",[],"E:\\react\\test\\test-dmin-bar\\src\\redux\\store.ts",[],"E:\\react\\test\\test-dmin-bar\\src\\App.tsx",[],"E:\\react\\test\\test-dmin-bar\\src\\redux\\productReducer.ts",[],"E:\\react\\test\\test-dmin-bar\\src\\changeProductsPage.tsx",["85"],"E:\\react\\test\\test-dmin-bar\\src\\common\\productList\\productList.tsx",["86"],"import React, {useEffect} from 'react'\r\nimport {useDispatch, useSelector} from \"react-redux\"\r\nimport {RootStateType} from '../../redux/store'\r\nimport {productsType, setProductAC} from \"../../redux/productReducer\"\r\nimport cl from './ProductList.module.css'\r\nimport data from '../../redux/products.json'\r\nimport ItemProduct from './itemProduct'\r\nimport {sortArrProd} from \"../../redux/filtered\";\r\n\r\n\r\nconst ProductList = () => {\r\n    // useEffect(() => {\r\n    //     const data1: any  = data\r\n    //     debugger\r\n    //\r\n    // }, [])\r\n    let filterMin =useSelector<RootStateType,number>(state => state.products.filterMin)\r\n    let filterMax =useSelector<RootStateType,number>(state => state.products.filterMax)\r\n    let currency =useSelector<RootStateType,string>(state => state.products.currency)\r\n\r\n    const dispatch = useDispatch()\r\n    let products = useSelector<RootStateType, Array<productsType>>(state => state.products.products)\r\n    let ollProducts = products\r\n    console.log(ollProducts)\r\n    const abcType = useSelector<RootStateType, string>(state => state.products.sort)\r\n\r\n    useEffect(() => {\r\n        const data1: any  = data\r\n        if(products.length <data1.products.length){\r\n            dispatch(setProductAC(data1.products))\r\n        }else {\r\n            dispatch(setProductAC(products))\r\n        }\r\n    }, [dispatch,ollProducts])\r\n\r\n    ollProducts = ollProducts.filter(p=> Number(p.price) >= Number(filterMin) && Number(p.price) <= Number(filterMax))\r\n\r\n    const product = sortArrProd(ollProducts, abcType).map(p => <ItemProduct key={p.id} id={p.id} image={p.image} name={p.name} description={p.description} price={p.price} currency={currency}/>)\r\n\r\n    return (\r\n        <div className={cl.ollWrap}>\r\n            {product}\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default ProductList;","E:\\react\\test\\test-dmin-bar\\src\\common\\productList\\itemProduct.tsx",[],"E:\\react\\test\\test-dmin-bar\\src\\common\\toolbar\\toolbar.tsx",["87","88","89","90","91","92"],"E:\\react\\test\\test-dmin-bar\\src\\common\\toolbar\\sort\\Sort.tsx",["93"],"import React, {ChangeEvent, useState, KeyboardEvent, useEffect} from 'react'\nimport {useDispatch, useSelector} from 'react-redux';\nimport cl from './Sort.module.css';\nimport {sortTypeAC} from \"../../../redux/productReducer\";\nimport {RootStateType} from \"../../../redux/store\";\n\ntype ItemType = {\n    title: string\n    value: any\n}\ntype SelectType = {\n    items: ItemType[]\n}\nexport const Sort = (props:SelectType) => {\n    const dispatch = useDispatch()\n    let value = useSelector<RootStateType,string>(state => state.products.sort)\n    const [active, setActive] = useState(false);\n    const [hoverEL, setHoverEL] = useState(value);\n    const onChange =(value:string)=>{\n        dispatch(sortTypeAC(value))\n    }\n    const selectedItem = props.items.find(i => i.value === value)\n    const hoveredItem = props.items.find(i => i.value === hoverEL)\n\n    useEffect(() => {\n        setHoverEL(value);\n    }, [value])\n\n    const showActive = () => { setActive(!active) }\n    const itemClicked = (value: any) => {\n        onChange(value);\n        showActive();\n    }\n    const onKeyUp = (e: KeyboardEvent<HTMLDivElement>) => {\n        if (e.key === 'ArrowDown' || e.key === 'ArrowUp') {\n            for (let i = 0; i < props.items.length; i++) {\n                if (props.items[i].value === hoverEL) {\n                    const pretendentElement = e.key === 'ArrowDown' ? props.items[i + 1] : props.items[i - 1];\n                    if (pretendentElement) {\n                        onChange(pretendentElement.value)\n                        setHoverEL(props.items[i+1].value);\n                        return;\n                    }\n                }\n            }\n            if (!selectedItem) {\n                onChange(props.items[0].value);\n            }\n        }\n        if (e.key === 'Enter' || e.key === 'Escape') {\n            setActive(false);\n        }\n    }\n\n    return (\n        <div  className={cl.select} onKeyUp={onKeyUp} tabIndex={0}>\n            <h3 onClick={showActive} className={cl.mainTitle}>{selectedItem && selectedItem.title}</h3>\n            {active &&\n            <div className={cl.items}>\n                {props.items.map(i =>\n                    <div key={i.value}\n                         onMouseEnter={() => { setHoverEL(i.value) }}\n                         onClick={() => {  itemClicked(i.value) }}\n                         className={cl.item + (hoveredItem === i ? cl.selected : '')} >\n                        {i.title}\n                    </div>)}\n            </div>\n            }\n        </div>\n    )\n}","E:\\react\\test\\test-dmin-bar\\src\\common\\productList\\newProduct.tsx",[],"E:\\react\\test\\test-dmin-bar\\src\\common\\toolbar\\currency\\currency.tsx",[],"E:\\react\\test\\test-dmin-bar\\src\\expansive\\validate.tsx",[],"E:\\react\\test\\test-dmin-bar\\src\\expansive\\Input.tsx",["94"],"import React, {ChangeEvent, useEffect, useState} from \"react\";\r\nimport {TextField} from \"@material-ui/core\";\r\nimport {validate} from \"./validate\";\r\nimport makeStyles from \"@material-ui/core/styles/makeStyles\";\r\n\r\ntype inputType = {\r\n    id?: string\r\n    className?:string\r\n    label:string\r\n    title?:string\r\n    variant?:string\r\n    helperText?:string\r\n    value:string\r\n    addInputValue: (value: string) => void\r\n    type?: string\r\n    required?:boolean\r\n    multiline?:any\r\n    rows?:number\r\n    // name: string\r\n    placeholder: string\r\n    validate: (value: string, min: number, max: number, name: string) => string\r\n}\r\nexport const Input = (props: inputType) => {\r\n    const useStyles = makeStyles((theme) => ({\r\n        root: {\r\n            display: 'flex',\r\n            flexWrap: 'wrap',\r\n        },\r\n        margin: {\r\n            margin: theme.spacing(1),\r\n        },\r\n        input: {\r\n            display: 'none',\r\n        },\r\n    }));\r\n    const classes = useStyles();\r\n\r\n\r\n    let [value, setValue] = useState<string|number>('');\r\n    let [error, setError] = useState<string>('')\r\n    useEffect(() => {\r\n        setValue(props.value)\r\n    }, [props.value])\r\n    const onChangeValue = (e: ChangeEvent<HTMLInputElement>) => {\r\n        setError('')\r\n        setValue(e.currentTarget.value)\r\n    }\r\n    const onValidate = () => {\r\n        if (props.label==='name') {\r\n            const err = validate(value, 2, 12, 'name')\r\n            err? setError(err): props.addInputValue(value.toString())\r\n        }\r\n        if (props.label===\"price\") {\r\n\r\n            const err = validate(value, 1, 4, 'price')\r\n            err? setError(err): props.addInputValue(value.toString())\r\n        }\r\n        if (props.label==='description') {\r\n            const err = validate(value, 7, 400, 'description')\r\n            err? setError(err): props.addInputValue(value.toString())\r\n        }\r\n        if (props.label==='image') {\r\n            const err = validate(value, 1, 14444, 'image')\r\n            err? setError(err): props.addInputValue(value.toString())\r\n        }\r\n    }\r\n    const handleBlur = () => {\r\n        onValidate()\r\n    }\r\n    const onKeyPressCallback = (e: React.KeyboardEvent<HTMLInputElement>) => {\r\n        if (e.key === \"Enter\") {\r\n            onValidate()\r\n        }\r\n    }\r\n    return (\r\n\r\n            <TextField type={props.type} value={value} onChange={onChangeValue} helperText={error}\r\n                       id={props.id} name={props.placeholder} placeholder={props.placeholder}\r\n                       className={props.className} label={props.label} onBlur={handleBlur}\r\n                       onKeyPress={onKeyPressCallback}  error={!!error} variant=\"outlined\"\r\n                       rows={props.rows}\r\n            />\r\n\r\n    )\r\n}\r\n","E:\\react\\test\\test-dmin-bar\\src\\expansive\\filtered.ts",[],"E:\\react\\test\\test-dmin-bar\\src\\common\\toolbar\\range.tsx",["95"],"import React, {ChangeEvent} from 'react';\r\nimport {Slider, Typography} from \"@material-ui/core\";\r\n\r\ntype propsType = {\r\n    // min: number\r\n    // max: number\r\n    //value:number[]\r\n    valuetext: any\r\n    setValue: (value: number | number[]) => void\r\n}\r\n\r\nconst Range = (props: propsType) => {\r\n    // const [value, setValues] = React.useState <number[]>([props.min,props.max]);\r\n    // let value = [props.min, props.max]\r\n let value = [1000,8000]\r\n    const handleChange = (event: any, newValue: number | number[]): void => {\r\n        props.setValue(newValue as number[])\r\n    };\r\n\r\n    return (\r\n        <>\r\n            <Typography id=\"discrete-slider-custom\" gutterBottom>\r\n                Material-UI min - max\r\n            </Typography>\r\n            <Slider\r\n                value={value}\r\n                // step={100}\r\n                onChange={handleChange}\r\n                valueLabelDisplay=\"auto\"\r\n                aria-labelledby=\"range-slider\"\r\n                getAriaValueText={props.valuetext}\r\n            />\r\n\r\n        </>\r\n    );\r\n};\r\n\r\nexport default Range;\r\n","E:\\react\\test\\test-dmin-bar\\src\\common\\toolbar\\wrange\\Wrange.tsx",["96","97","98"],"E:\\react\\test\\test-dmin-bar\\src\\expansive\\modalForm\\exampleModal.tsx",["99"],"E:\\react\\test\\test-dmin-bar\\src\\expansive\\Portal.tsx",[],{"ruleId":"100","replacedBy":"101"},{"ruleId":"102","replacedBy":"103"},{"ruleId":"104","severity":1,"message":"105","line":5,"column":8,"nodeType":"106","messageId":"107","endLine":5,"endColumn":18},{"ruleId":"108","severity":1,"message":"109","line":34,"column":8,"nodeType":"110","endLine":34,"endColumn":30,"suggestions":"111"},{"ruleId":"104","severity":1,"message":"112","line":8,"column":8,"nodeType":"106","messageId":"107","endLine":8,"endColumn":13},{"ruleId":"104","severity":1,"message":"113","line":9,"column":9,"nodeType":"106","messageId":"107","endLine":9,"endColumn":26},{"ruleId":"104","severity":1,"message":"114","line":28,"column":11,"nodeType":"106","messageId":"107","endLine":28,"endColumn":22},{"ruleId":"104","severity":1,"message":"115","line":31,"column":11,"nodeType":"106","messageId":"107","endLine":31,"endColumn":22},{"ruleId":"104","severity":1,"message":"116","line":34,"column":11,"nodeType":"106","messageId":"107","endLine":34,"endColumn":19},{"ruleId":"104","severity":1,"message":"117","line":42,"column":14,"nodeType":"106","messageId":"107","endLine":42,"endColumn":23},{"ruleId":"104","severity":1,"message":"118","line":1,"column":16,"nodeType":"106","messageId":"107","endLine":1,"endColumn":27},{"ruleId":"104","severity":1,"message":"119","line":36,"column":11,"nodeType":"106","messageId":"107","endLine":36,"endColumn":18},{"ruleId":"104","severity":1,"message":"118","line":1,"column":16,"nodeType":"106","messageId":"107","endLine":1,"endColumn":27},{"ruleId":"104","severity":1,"message":"120","line":115,"column":17,"nodeType":"106","messageId":"107","endLine":115,"endColumn":20},{"ruleId":"104","severity":1,"message":"121","line":115,"column":39,"nodeType":"106","messageId":"107","endLine":115,"endColumn":49},{"ruleId":"104","severity":1,"message":"122","line":182,"column":71,"nodeType":"106","messageId":"107","endLine":182,"endColumn":86},{"ruleId":"104","severity":1,"message":"123","line":1,"column":16,"nodeType":"106","messageId":"107","endLine":1,"endColumn":24},"no-native-reassign",["124"],"no-negated-in-lhs",["125"],"@typescript-eslint/no-unused-vars","'NewProduct' is defined but never used.","Identifier","unusedVar","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'products'. Either include it or remove the dependency array.","ArrayExpression",["126"],"'Range' is defined but never used.","'DoubleRangeSlider' is defined but never used.","'setMinValue' is assigned a value but never used.","'setMaxValue' is assigned a value but never used.","'setValue' is assigned a value but never used.","'valuetext' is defined but never used.","'ChangeEvent' is defined but never used.","'classes' is assigned a value but never used.","'min' is assigned a value but never used.","'currentMax' is assigned a value but never used.","'minValueBetween' is assigned a value but never used.","'useState' is defined but never used.","no-global-assign","no-unsafe-negation",{"desc":"127","fix":"128"},"Update the dependencies array to be: [dispatch, ollProducts, products]",{"range":"129","text":"130"},[1333,1355],"[dispatch, ollProducts, products]"]